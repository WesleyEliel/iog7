# Generated by Django 4.0.2 on 2022-04-23 09:55

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EncryptedProof',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('encrypted_text', models.TextField(verbose_name='Encrypted text')),
                ('key', models.CharField(max_length=220, verbose_name='Key')),
                ('display_key', models.BooleanField(verbose_name='Display the key')),
                ('is_active', models.BooleanField(default=True, verbose_name='Design if the proof is available')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Update Date')),
            ],
            options={
                'verbose_name': 'Encrypted Proof',
                'verbose_name_plural': 'Encrypted Proofs',
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date du jeu')),
                ('odd', models.FloatField(verbose_name='Odds')),
                ('odd_type', models.CharField(choices=[('fixed', 'Fixed'), ('full_time', 'Full Time')], max_length=220, verbose_name='Odds type')),
                ('match_id', models.IntegerField(default='61750826', unique=True, verbose_name='')),
                ('price', models.DecimalField(decimal_places=3, max_digits=5, verbose_name='Price')),
                ('is_active', models.BooleanField(default=True, verbose_name='Design if the Match is available')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Update Date')),
            ],
            options={
                'verbose_name': 'Match',
                'verbose_name_plural': 'Matches',
            },
        ),
        migrations.CreateModel(
            name='PricingPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('price', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Price')),
                ('order', models.SmallIntegerField(default=1, verbose_name='Order')),
                ('first_feature', models.CharField(blank=True, max_length=25, null=True, verbose_name='First Feature')),
                ('second_feature', models.CharField(blank=True, max_length=25, null=True, verbose_name='Second Feature')),
                ('third_feature', models.CharField(blank=True, max_length=25, null=True, verbose_name='Third Feature')),
                ('fourth_feature', models.CharField(blank=True, max_length=25, null=True, verbose_name='Fourth Feature')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('is_active', models.BooleanField(default=True, verbose_name='Design if the plan is available')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Update Date')),
            ],
            options={
                'verbose_name': 'Pricing Plan',
                'verbose_name_plural': 'Pricing Plans',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Surfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Ip address')),
                ('telegram_link', models.URLField(blank=True, verbose_name='Subscriber Telegram Account Link')),
                ('is_banned', models.BooleanField(default=False, verbose_name='Is banned')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Update Date')),
            ],
            options={
                'verbose_name': 'Surfer',
                'verbose_name_plural': 'Surfers',
            },
        ),
        migrations.CreateModel(
            name='VideoProof',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resume', models.CharField(max_length=220, verbose_name='Resume')),
                ('thumbnail', models.ImageField(upload_to='', verbose_name='Thumbnail')),
                ('video', models.FileField(blank=True, null=True, upload_to='', verbose_name='Te video file')),
                ('link', models.URLField(blank=True, null=True, verbose_name='Remote storage link')),
                ('youtube_link', models.URLField(blank=True, null=True, verbose_name='Youtube link')),
                ('is_active', models.BooleanField(default=True, verbose_name='Design if the proof is available')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Update Date')),
            ],
            options={
                'verbose_name': 'Video Proof',
                'verbose_name_plural': 'Video Proofs',
            },
        ),
    ]
